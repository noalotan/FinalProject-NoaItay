pipeline {
    agent any

    environment {
        GODADDY_KEY = 'h1okCf5NCjpb_G7fc2KGSt1oKUxAfG5x48d' // Your GoDaddy API key
        GODADDY_SECRET = 'HZcaigcV5VqZx3idQNdFUp' // Your GoDaddy API secret
        DOMAIN = 'itay-noa.online'
        AWS_LB_DNS = 'alb-ingress-noa-itay-1726286553.us-east-1.elb.amazonaws.com' // Replace with your actual AWS Load Balancer DNS
    }

    stages {
        stage('Update DNS Records') {
            steps {
                script {
                    // Define the subdomains
                    def records = [
                        [subdomain: 'statuspage'],
                        [subdomain: 'grafana']
                    ]

                    records.each { record ->
                        def subdomain = record.subdomain

                        // Construct the API request
                        def url = "https://api.godaddy.com/v1/domains/${DOMAIN}/records/CNAME/${subdomain}"
                        def requestBody = "[{\"data\": \"${AWS_LB_DNS}\", \"ttl\": 600}]"

                        // Make the API call to update DNS records
                        def response = sh(script: """
                            curl -X PUT -H "Authorization: sso-key \${GODADDY_KEY}:\${GODADDY_SECRET}" \
                            -H "Content-Type: application/json" \
                            -d '${requestBody}' \
                            '${url}'
                        """, returnStdout: true).trim()

                        // Print the response for debugging
                        echo "Updated DNS record for ${subdomain}: ${response}"
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'DNS records update process finished.'
        }
    }
}
