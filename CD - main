pipeline {
    agent any
    stages {
        stage('Architecture Apply') {
            steps {
                script {
                    status(context: 'Architecture Apply', state: 'PENDING')
                    try {
                        build job: 'Prod-Architecture-apply'
                        status(context: 'Architecture Apply', state: 'SUCCESS')
                    } catch (Exception e) {
                        status(context: 'Architecture Apply', state: 'FAILURE')
                        throw e
                    }
                }
            }
        }
        stage('Image Build') { 
            steps {
                script {
                    status(context: 'Image Build', state: 'PENDING')
                    try {
                        build job: 'Prod-Update-Status-Page-Image'
                        status(context: 'Image Build', state: 'SUCCESS')
                    } catch (Exception e) {
                        status(context: 'Image Build', state: 'FAILURE')
                        throw e
                    }
                }
            }
        }
        stage('Deploy YMLs') {
            steps {
                script {
                    status(context: 'Deploy YMLs', state: 'PENDING')
                    try {
                        build job: 'Prod-Application-deploy'
                        status(context: 'Deploy YMLs', state: 'SUCCESS')
                    } catch (Exception e) {
                        status(context: 'Deploy YMLs', state: 'FAILURE')
                        throw e
                    }
                }
            }
        }
        stage('ALB Apply') {
            steps {
                script {
                    status(context: 'ALB Apply', state: 'PENDING')
                    try {
                        build job: 'Prod-ALB-deploy'
                        status(context: 'ALB Apply', state: 'SUCCESS')
                    } catch (Exception e) {
                        status(context: 'ALB Apply', state: 'FAILURE')
                        throw e
                    }
                }
            }
        }
        stage('Domain Update') {
            steps {
                script {
                    status(context: 'Domain Update', state: 'PENDING')
                    try {
                        build job: 'domain-update'
                        status(context: 'Domain Update', state: 'SUCCESS')
                    } catch (Exception e) {
                        status(context: 'Domain Update', state: 'FAILURE')
                        throw e
                    }
                }
            }
        }
    }
}
